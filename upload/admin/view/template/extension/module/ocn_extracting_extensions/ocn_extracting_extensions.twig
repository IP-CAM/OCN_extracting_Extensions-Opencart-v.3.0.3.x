{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <ul class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ul>
    </div>
  </div>
  <div class="container-fluid" id="container">
    {% if error_warning %}
    <div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_warning }}
      <button type="button" class="close" data-dismiss="alert">&times;</button>
    </div>
    {% endif %}
    {% if success %}
    <div class="alert alert-success alert-dismissible"><i class="fa fa-check-circle"></i> {{ success }}
      <button type="button" class="close" data-dismiss="alert">&times;</button>
    </div>
    {% endif %}

    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="pull-right">
          <a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
        </div>
        <h1>{{ heading_title }}</h1>
      </div>
      <div class="panel-body">

          <ul class="nav nav-tabs" id="tabs">
            <li class="active"><a href="#tab-search" data-toggle="tab">{{ tab_search }}</a></li>
            <li><a href="#tab-files" data-toggle="tab" data-action="files">{{ tab_files }}</a></li>
            <li><a href="#tab-info" data-toggle="tab">{{ tab_info }}</a></li>
          </ul>

          <div class="tab-content">

            <div class="tab-pane fade in active" id="tab-search">
              <div class="form-group">
                <div class="col-sm-3">
                  <label class="control-label" for="input-search">{{ text_module_name }} <em>{{ help_module_name }}</em></label>
                </div>
                <div class="col-sm-6">
                  <div class="input-group">
                    <input type="text" class="form-control" id="input-search" name="module" value="{{ module }}" required>
                    <span class="input-group-btn">
                      <button class="btn btn-primary" type="button" id="button-search" data-url="{{ search }}" data-warning="{{ warning }}" data-error="{{ error_module }}"><i class="fa fa-search"></i> {{ button_search }}</button>
                    </span>
                  </div>
                </div>
                <div class="col-sm-3">
                  <div class="btn-group" role="group">
                    <button class="btn btn-warning" type="button" id="button-extract" data-url="{{ extract }}" data-success="{{ success }}" data-warning="{{ warning }}" data-error="{{ error_extract }}"><i class="fa fa-file-archive-o"></i> {{ button_extract }}</button>
                    <button class="btn btn-secondary" type="button" id="button-clear"><i class="fa fa-times"></i> {{ button_clear }}</button>
                  </div>
                </div>
              </div>
              <hr>
              <div id="list"></div>
            </div>

            <div class="tab-pane fade" id="tab-files">
              <div class="row">
                <div class="col-sm-12">
                  <button class="btn btn-primary" type="button" id="button-files" data-url="{{ files }}"><i class="fa fa-refresh"></i> {{ text_update }}</button>
                </div>
              </div>
              <div id="files"></div>
            </div>

            <div class="tab-pane fade" id="tab-info">
              <div class="row">
                <div class="col-sm-12 col-md-8 col-lg-6">
                  <table class="table table-striped table-hover">
                    <tbody>
                    <tr>
                      <td>{{ text_name }}:</td>
                      <td><a href="{{ data_extension_link }}" target="_blank">{{ heading_title }}</a></td>
                    </tr>
                    <tr>
                      <td>{{ text_author }}:</td>
                      <td><a href="{{ data_author_link }}" target="_blank">{{ data_author_name }}</a></td>
                    </tr>
                    <tr>
                      <td>{{ text_version }}:</td>
                      <td>{{ data_version }}</td>
                    </tr>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
      </div>
    </div>
  </div>
</div>
<script>
  $(document).ready(function(){

      $('#button-clear').on('click', function () {
          $("#list").empty();
          $('#input-search').val('');
      });

      $('#button-search').on('click', function () {
          const module = $('#input-search').val();
          const button = $('#button-search');
          clearAlerts()
          if (module !== '') {
              searchModules(module);
          } else {
              const warning = button.attr('data-warning');
              const error = button.attr('data-error');
              showAlert('warning', warning, error);
          }
      });

      $('#button-files').on('click', function () {
          getFiles();
      });

      $('#tabs').on('click', 'a[data-action="files"]', function () {
          getFiles();
      })

      $('#button-extract').on('click', function () {
          const button = $('#button-extract');
          let checked = [];
          $('input[name*="module_search"]:checked').each(function() {
              checked.push(this.value);
          });
          $('#list > .alert').hide('slow');

          if (checked.length) {
              const url = button.attr('data-url');
              const success = button.attr('data-success');

              lockButtons()
              button.find('i.fa').removeClass('fa-file-archive-o').addClass('fa-spinner fa-pulse');

              $.ajax({
                  type: 'post',
                  url: url,
                  data: $('#form-extract').serialize(),
                  dataType: 'json',
                  success: function (response) {
                      showAlert('success', success, response.success)
                  },
                  error: function (xhr, ajaxOptions, thrownError) {
                      alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
                  },
                  complete: function () {
                      unLockButtons()
                      button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-file-archive-o');
                  }
              });
          } else {
              const warning = button.attr('data-warning');
              const error = button.attr('data-error');
              showAlert('warning', warning, error);
          }
      });

      function showAlert(color = 'info', status = success, text = 'Нет сообщения.') {
          let alertBlock = '<div class="alert alert-' + color + ' alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>' + status + '</strong> ' + text + '</div>';
          $('#list').prepend(alertBlock);
      }

      function getFiles() {
          const button = $('#button-files');
          const url = button.attr('data-url');
          $("#files").load(url, function( response, status, xhr ) {
              if ( status == "error" ) {
                  var msg = "Error: ";
                  $( "#files" ).html( msg + xhr.status + " " + xhr.statusText );
              }
              if ( status == "success" ) {
                  // if status success
              }
          });
      }

      function searchModules(module) {
          const button = $('#button-search');
          const url = button.attr('data-url');
          let list = $("#list");

          list.html('');
          lockButtons()
          button.find('i.fa').removeClass('fa-search').addClass('fa-spinner fa-pulse');

          list.load(
              url,
              {
                  module: module
              },
              function( response, status, xhr ) {
                  if ( status == "error" ) {
                      var msg = "Error: ";
                      $( "#files" ).html( msg + xhr.status + " " + xhr.statusText );
                  }
                  if ( status == "success" ) {
                      // if status success
                  }
                  unLockButtons()
                  button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-search');
              }
          );
      }

      function lockButtons() {
          $('#input-search').prop('disabled', true);
          $('#button-extract').prop('disabled', true);
          $('#button-clear').prop('disabled', true);
          $('#button-search').prop('disabled', true);
      }

      function unLockButtons() {
          $('#input-search').prop('disabled', false);
          $('#button-extract').prop('disabled', false);
          $('#button-clear').prop('disabled', false);
          $('#button-search').prop('disabled', false);
      }

      function clearAlerts() {
          $('.alert').hide('slow');
      }
  });
</script>
{{ footer }}
