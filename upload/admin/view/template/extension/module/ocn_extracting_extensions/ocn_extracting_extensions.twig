{{ header }}{{ column_left }}
<div id="content">
  <div class="page-header">
    <div class="container-fluid">
      <ul class="breadcrumb">
        {% for breadcrumb in breadcrumbs %}
        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
        {% endfor %}
      </ul>
    </div>
  </div>
  <div class="container-fluid" id="container">
    {% if error_warning and error_download %}
    <div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_warning }} {{ error_download }}
      <button type="button" class="close" data-dismiss="alert">&times;</button>
    </div>
    {% endif %}
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="pull-right">
          <a href="{{ url_cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
        </div>
        <h1>{{ heading_title }}</h1>
      </div>
      <div class="panel-body">
        <ul class="nav nav-tabs" id="tabs">
          <li class="active"><a href="#tab-search" data-toggle="tab">{{ tab_search }}</a></li>
          <li><a href="#tab-files" data-toggle="tab" data-action="files">{{ tab_files }}</a></li>
          <li><a href="#tab-info" data-toggle="tab">{{ tab_info }}</a></li>
        </ul>

        <div class="tab-content">
          <div class="tab-pane fade in active" id="tab-search">
            <div class="form-group">
              <div class="col-sm-3">
                <label class="control-label" for="input-search">{{ text_module_name }} <em>{{ help_module_name }}</em></label>
              </div>
              <div class="col-sm-6">
                <div class="input-group">
                  <input type="text" class="form-control" id="input-search" name="module_name" value="" required>
                  <span class="input-group-btn">
                    <button class="btn btn-primary" type="button" id="button-search" data-url="{{ url_search }}" data-warning="{{ warning }}" data-error="{{ error_module }}"><i class="fa fa-search"></i> {{ button_search }}</button>
                  </span>
                </div>
              </div>
              <div class="col-sm-3">
                <div class="btn-group pull-right" role="group">
                  <button class="btn btn-warning" type="button" id="button-extract" data-url="{{ url_extract }}" data-warning="{{ warning }}" data-error="{{ error_extract }}"><i class="fa fa-file-archive-o"></i> {{ button_extract }}</button>
                  <button class="btn btn-secondary" type="button" id="button-clear"><i class="fa fa-times"></i> {{ button_clear }}</button>
                </div>
              </div>
            </div>
            <hr>
            <div id="list"></div>
          </div>

          <div class="tab-pane fade" id="tab-files">
            <div class="row">
              <div class="col-sm-9"></div>
              <div class="col-sm-3">
                <div class="btn-group pull-right" role="group">
                  <button class="btn btn-primary" type="button" id="button-files" data-url="{{ url_files }}"><i class="fa fa-refresh"></i> {{ button_update }}</button>
                  <button class="btn btn-danger" type="button" id="button-remove" data-url="{{ url_remove }}" data-warning="{{ warning }}" data-error="{{ error_select_delete }}"><i class="fa fa-trash"></i> {{ button_remove }}</button>
                </div>
              </div>
            </div>
            <hr>
            <div id="files"></div>
          </div>

          <div class="tab-pane fade" id="tab-info">
            <div class="row">
              <div class="col-sm-12 col-md-8 col-lg-6">
                <table class="table table-striped table-hover">
                  <tbody>
                  <tr>
                    <td>{{ text_name }}:</td>
                    <td><a href="{{ data_extension_link }}" target="_blank">{{ heading_title }}</a></td>
                  </tr>
                  <tr>
                    <td>{{ text_author }}:</td>
                    <td><a href="{{ data_author_link }}" target="_blank">{{ data_author_name }}</a></td>
                  </tr>
                  <tr>
                    <td>{{ text_version }}:</td>
                    <td>{{ data_version }}</td>
                  </tr>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="panel-footer">{{ heading_title }} v{{ data_version }}</div>
    </div>
  </div>
</div>

<script>
$(document).ready(function(){
  // Clear
  $('#button-clear').on('click', function () {
    $("#list").empty();
    $('#input-search').val('');
  });

  // Search modules
  $('#button-search').on('click', function () {
    const module_name = $('#input-search').val();
    const button = $('#button-search');

    clearAlerts();

    if (module_name !== '') {
      searchModules(module_name);
    } else {
      const warning = button.attr('data-warning');
      const error = button.attr('data-error');
      
      showAlert($('#list'), 'warning', warning, error);
    }
  });

  function searchModules(module_name) {
    const button = $('#button-search');
    const url = button.attr('data-url');
    let list = $("#list");

    list.html('');
    lock();
    button.find('i.fa').removeClass('fa-search').addClass('fa-spinner fa-pulse');

    list.load(
      url,
      { module_name: module_name },
      function( response, status, xhr ) {
        if ( status === "error" ) {
          let msg = "Error: ";
          list.html( msg + xhr.status + " " + xhr.statusText );
        }
        if ( status === "success" ) {
          // if status success
        }
        unLock()
        button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-search');
      }
    );
  }

  // Search files
  $('#button-files').on('click', function () {
    getFiles();
  });

  $('#tabs').on('click', 'a[data-action="files"]', function () {
    getFiles();
  });

  function getFiles(data = false) {
    const button = $('#button-files');
    const url = button.attr('data-url');
    let files = $("#files");

    files.html('');
    lock();
    button.find('i.fa').removeClass('fa-refresh').addClass('fa-spinner fa-pulse');

    files.load(url, function( response, status, xhr ) {
      if ( status === "error" ) {
        let msg = "Error: ";
          files.html( msg + xhr.status + " " + xhr.statusText );
      }
      if (data) {
        showAlert(files, data.color, data.status, data.success);
      }

      unLock()
      button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-refresh');
    });
  }

  // Add files to zip
  $('#button-extract').on('click', function () {
    const button = $('#button-extract');
    let list = $("#list");
    let checked = [];
    $('input[name*="modules"]:checked').each(function() {
      checked.push(this.value);
    });
    clearAlerts(list);

    if (checked.length) {
      const url = button.attr('data-url');
      const success = button.attr('data-success');

      lock();
      button.find('i.fa').removeClass('fa-file-archive-o').addClass('fa-spinner fa-pulse');

      $.ajax({
        type: 'post',
        url: url,
        data: $('#form-search').serialize(),
        dataType: 'json',
        success: function (response) {
          if (response.errors) {
            if(response.errors.error_extract) {
              showAlert(list, 'danger', response.errors.error_warning, response.errors.error_extract);
            }
            if(response.errors.error_zip) {
              showAlert(list, 'danger', response.errors.error_warning, response.errors.error_extract);
            }
          } else if (response.success) {
            showAlert(list, 'success', response.success, response.success_text);
          }
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        },
        complete: function () {
          unLock();
          button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-file-archive-o');
        }
      });
    } else {
      const warning = button.attr('data-warning');
      const error = button.attr('data-error');
      showAlert(list, 'warning', warning, error);
    }
    
    setTimeout(function() {
      clearAlerts(list);
      }, 
      10000
    );
  });

  // Remove files
  $('#button-remove').on('click', function () {
    const button = $('#button-remove');
    const url = button.attr('data-url');
    let files = $("#files");
    let checked = [];
    $('input[name*="files"]:checked').each(function() {
        checked.push(this.value);
    });

    if (checked.length) {
      lock();
      button.find('i.fa').removeClass('fa-trash').addClass('fa-spinner fa-pulse');

      $.ajax({
        type: 'post',
        url: url,
        data: $('#form-files').serialize(),
        dataType: 'json',
        success: function(response) {
          let data = {
              color: 'success',
              status: response.status,
              success: response.success
          };
          getFiles(data);
          // @todo сделать вывод ошибок
        },
        error: function(xhr, ajaxOptions, thrownError) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        },
        complete: function(response) {
          button.find('i.fa').removeClass('fa-spinner fa-pulse').addClass('fa-trash');
        }
      });
    } else {
      const warning = button.attr('data-warning');
      const error = button.attr('data-error');
      showAlert(files, 'warning', warning, error);
    }

    setTimeout(function() {
      clearAlerts(files);
      },
      10000
    );
  });

  // Lock/Unlock buttons
  function lock() {
    $('#input-search').prop('disabled', true);
    $('#button-extract').prop('disabled', true);
    $('#button-clear').prop('disabled', true);
    $('#button-search').prop('disabled', true);
    $('#button-files').prop('disabled', true);
    $('#button-remove').prop('disabled', true);
  }

  function unLock() {
    $('#input-search').prop('disabled', false);
    $('#button-extract').prop('disabled', false);
    $('#button-clear').prop('disabled', false);
    $('#button-search').prop('disabled', false);
    $('#button-files').prop('disabled', false);
    $('#button-remove').prop('disabled', false);
  }

  // Alerts
  function showAlert(block, color, status, text) {
    block.find('> .alert').hide('slow');
    let alertBlock = '<div class="alert alert-' + color + ' alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><strong>' + status + '</strong> ' + text + '</div>';
    block.prepend(alertBlock);
  }

  function clearAlerts(block = false) {
    if (block) {
      block.find('> .alert').hide('slow');
    } else {
      $('.alert').hide('slow');
    }
  }
});
</script>
{{ footer }}
